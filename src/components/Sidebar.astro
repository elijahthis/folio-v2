---
import { BsChevronLeft, BsChevronRight } from "react-icons/bs";
import { TfiClose } from "react-icons/tfi";

const navList = [
	{ label: "work.", id: "work" },
	{ label: "info.", id: "info" },
	{ label: "contact.", id: "contact" },
];

const currentlyReading: { title: string; link: string } = {
	title: "A Storm of Swords",
	link: "https://www.goodreads.com/book/show/62291.A_Storm_of_Swords",
};
---

<script>
	let isOpen = false;
	const sidebarElement = document.querySelector(".Sidebar");
	const sidebarButton = document.querySelector(".Sidebar__button");
	const sidebarCloseSvg = document.querySelector(".Sidebar__close");

	// toggle open state of sidebar
	sidebarButton.addEventListener("click", () => {
		if (isOpen) {
			sidebarElement.classList.remove("Sidebar--open");
			sidebarButton.classList.remove("Sidebar__button--open");
			isOpen = false;
		} else {
			sidebarElement.classList.add("Sidebar--open");
			sidebarButton.classList.add("Sidebar__button--open");
			isOpen = true;
		}
	});

	// close sidebar
	sidebarCloseSvg.addEventListener("click", () => {
		sidebarElement.classList.remove("Sidebar--open");
		sidebarButton.classList.remove("Sidebar__button--open");
		isOpen = false;
	});
</script>

<aside class="Sidebar">
	<button class="Sidebar__button">
		<BsChevronLeft size="50" />
	</button>
	<TfiClose size="40" className="Sidebar__close" />
	<div class="Sidebar__inner">
		<nav>
			<ul>
				{
					navList.map((navItem) => (
						<li>
							<a href={`#${navItem.id}`} data-title={navItem.label}>
								<div>{navItem.label}</div>
							</a>
						</li>
					))
				}
			</ul>
		</nav>
		<div class="Sidebar__reading">
			<h4>Currently reading:</h4>
			<a href={currentlyReading.link} target="_blank"
				>{currentlyReading.title}
				<svg
					stroke="currentColor"
					fill="currentColor"
					stroke-width="0"
					viewBox="0 0 24 24"
					height="1em"
					width="1em"
					xmlns="http://www.w3.org/2000/svg"
					><path fill="none" d="M0 0h24v24H0z"></path><path
						d="M6 6v2h8.59L5 17.59 6.41 19 16 9.41V18h2V6z"></path></svg
				></a
			>
		</div>
		<div class="Sidebar__footer">
			<p>Copyright Â© 2023 Elijah Oyerinde</p>
		</div>
	</div>
</aside>

<style lang="scss">
	@import "../styles/variables";

	.Sidebar {
		position: fixed;
		right: 0;
		height: 100vh;
		z-index: 60;

		width: 41.0866666667vw;
		min-width: 600px;
		padding: 136px 96px 32px;
		transform: translateX(100%);

		background: $main_light;
		transition: all cubic-bezier(0.51, -0.02, 0.81, 0.07) 750ms;

		&__button {
			position: absolute;
			left: 0;
			top: 50%;
			transform: translateY(-50%) translateX(-80%);
			padding: 0.5rem 0.75rem;

			background: transparent;
			border: 0;
			border-radius: 0.5rem;

			// color: $tertiary_col;
			color: $main-light;
			transition: all cubic-bezier(0.51, -0.02, 0.81, 0.07) 0.45s;

			&--open {
				transform: translateY(-50%) translateX(-80%) rotate(180deg);
			}
		}

		ul {
			display: flex;
			flex-direction: column;
			align-items: flex-start;
			gap: 1rem;
			li {
				list-style-type: none;
				position: relative;
				overflow-y: hidden;

				a {
					font-size: 3.2rem;
					line-height: 3.5rem;
					font-weight: 500;
					text-decoration: none;
					color: $main_dark;

					display: block;
					font-family: Nexa-Heavy;

					&::after {
						content: attr(data-title);
						font-size: 3.2rem;
						line-height: 3.5rem;
						font-weight: 500;
						color: $tertiary-col;

						position: absolute;
						top: 100%;
						left: 0;
					}

					div,
					&::after {
						transition: all 0.4s cubic-bezier(0.3, 0.86, 0.36, 0.95);
						// transition: transform 0.25s;
					}

					&:hover {
						div {
							transform: translateY(-100%);
						}
						&::after {
							transform: translateY(-100%);
						}
					}
				}
			}
		}

		&--open {
			transform: translateX(0);
		}

		&__inner {
			position: relative;
			height: 100%;

			display: flex;
			flex-direction: column;
			align-items: stretch;
		}
		&__reading {
			margin-top: auto;

			h4 {
				text-transform: uppercase;
				opacity: 0.7;
			}

			a {
				text-decoration: none;
				color: $main-dark;

				display: flex;
				flex-direction: row;
				align-items: center;
				// gap: 0.25rem;
				transition: all 0.4s;
				text-underline-offset: 0.3rem;

				svg {
					opacity: 0;
					transition: all 0.4s;
					display: block;
				}

				&:hover {
					color: $tertiary-col;
					text-decoration: underline;

					svg {
						opacity: 1;
						margin-bottom: 0.2rem;
						margin-left: 0.2rem;
					}
				}
			}
		}

		&__footer {
			// position: absolute;
			// bottom: 0;
			margin-top: 1.5rem;
		}

		&__close {
			position: absolute;
			top: 2.33vw;
			right: 2.33vw;

			transition: color 450ms;

			&:hover {
				color: $tertiary-col;
			}
		}
	}
</style>
